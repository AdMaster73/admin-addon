/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.adminfaces.starter.bean;

import com.github.adminfaces.persistence.bean.CrudMB;
import ${entity.getQualifiedName()};
import ${service.getQualifiedName()};
import org.omnifaces.cdi.ViewScoped;
import org.omnifaces.util.Faces;
import javax.inject.Named;
import javax.inject.Inject;
import java.io.IOException;
import java.io.Serializable;
import java.util.logging.Level;
import static com.github.adminfaces.persistence.util.Messages.addDetailMessage;
import static com.github.adminfaces.persistence.util.Messages.getMessage;

import java.util.*;
<#list fields as field>
   <#if entity.hasToManyAssociation(field)>
import ${entity.getArrayType(field).getQualifiedName()};   
   <#elseif entity.hasToOneAssociation(field)>
import ${field.getType().getQualifiedName()};      
   </#if> 
</#list>

<#list embeddedFields as embeddedField>
import ${embeddedField.getType().getQualifiedName()};      
</#list>

<#assign service = "${ccEntity}Service">
@Named
@ViewScoped
public class ${entity.getName()}FormMB extends CrudMB<${entity.getName()}> implements Serializable {

    @Inject
    ${entity.getName()}Service ${service};

    @Inject
    public void initService() {
        setCrudService(${service});
    }

    @Override
    public void afterRemove() {
        try {
            super.afterRemove();//adds remove message
            Faces.redirect("${ccEntity}/${ccEntity}-list.xhtml");
            clear(); 
            sessionFilter.clear(${entity.getName()}FormMB.class.getName());//removes filter saved in session for this bean.
        } catch (Exception e) {
            log.log(Level.WARNING, "",e);
        }
    }

<#list toOneFields as field>
    <#if entity.isAutoCompleteType(field)>
    public List<${field.getType().getSimpleName()}> complete${field.getName()?cap_first}(String query) {
        return ${service}.get${field.getName()?cap_first}sBy${entity.getAssociationDisplayField(field)?cap_first}(query);
    }
   </#if>
</#list>
 
<#if embeddedFields?size != 0>
    @Override
    public ${entity.getName()} createEntity() {
        ${entity.getName()} ${ccEntity} = super.createEntity();
<#list embeddedFields as embeddedField>
        ${ccEntity}.set${embeddedField.getName()?cap_first}(new ${embeddedField.getType().getSimpleName()}());
</#list>
        return ${ccEntity};  
    }
</#if>   

}
